pts = coordinates(wind.loc[match(names(wind[4:15]), wind.loc$Code),])
rownames(pts) = wind.loc$Station
pts = SpatialPoints(pts, CRS("+proj=longlat +datum=WGS84"))
###################################################
utm29 = CRS("+proj=utm +zone=29 +datum=WGS84")
pts = spTransform(pts, utm29)
##################################################
wind.data = stConstruct(velocities, space = list(values = 1:ncol(velocities)),
time = wind$time, SpatialObj = pts, interval = TRUE)
###################################################
fname = system.file("shapes/sids.shp", package="maptools")[1]
nc = readShapePoly(fname, proj4string=CRS("+proj=longlat +datum=NAD27"))
###################################################
time = as.POSIXct(strptime(c("1974-07-01", "1979-07-01"), "%Y-%m-%d"),
tz = "GMT")
endTime = as.POSIXct(strptime(c("1978-06-30", "1984-06-30"), "%Y-%m-%d"),
tz = "GMT")
###################################################
data = data.frame(
BIR = c(nc$BIR74, nc$BIR79),
NWBIR = c(nc$NWBIR74, nc$NWBIR79),
SID = c(nc$SID74, nc$SID79))
###################################################
nct = STFDF(sp = as(nc, "SpatialPolygons"), time, data, endTime)
###################################################
states.m = map('state', plot=FALSE, fill=TRUE)
IDs <- sapply(strsplit(states.m$names, ":"), function(x) x[1])
states = map2SpatialPolygons(states.m, IDs=IDs)
###################################################
yrs = 1970:1986
time = as.POSIXct(paste(yrs, "-01-01", sep=""), tz = "GMT")
###################################################
data("Produc")
###################################################
# deselect District of Columbia, polygon 8, which is not present in Produc:
Produc.st = STFDF(states[-8], time, Produc[order(Produc[2], Produc[1]),])
###################################################
m = map2SpatialLines(
map("worldHires", xlim = c(-11,-5.4), ylim = c(51,55.5), plot=F))
proj4string(m) = "+proj=longlat +datum=WGS84"
m = spTransform(m, utm29)
###################################################
grd = SpatialPixels(SpatialPoints(makegrid(m, n = 300)),
proj4string = proj4string(m))
###################################################
wind.data = wind.data[, "1961-04"]
###################################################
n = 10
tgrd = xts(1:n, seq(min(index(wind.data)), max(index(wind.data)), length=n))
pred.grd = STF(grd, tgrd)
days = newValue
v = vgmST("separable", space = vgm(0.6, "Exp", 750000), time = vgm(1, "Exp", 1.0 * 3600 * 24), sill=0.6)
wind.ST = krigeST(values ~ 1, wind.data, pred.grd, v)
colnames(wind.ST@data) <- "sqrt_speed"
###################################################
layout = list(list("sp.lines", m, col='grey'),
list("sp.points", pts, first=F, cex=.5))
stplot(wind.ST, col.regions=brewer.pal(11, "RdBu")[-c(10,11)],
at=seq(-1.375,1,by=.25),
par.strip.text = list(cex=.7), sp.layout = layout)
plot(wind.ST, col.regions=brewer.pal(11, "RdBu")[-c(10,11)],
at=seq(-1.375,1,by=.25),
par.strip.text = list(cex=.7), sp.layout = layout)
plot(data)
plot(data)
plot(data[1])
plot(data[0])
View(data)
plot(data$BIR)
plot()
plot(data)
#r <- plumb("/bindings/controllers/spacetime/figure4.R")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r$run(host = '0.0.0.0', port=8001)
#r <- plumb("/bindings/controllers/spacetime/figure4.R")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r$run(host = '0.0.0.0', port=8001)
#r <- plumb("/bindings/controllers/spacetime/figure4.R")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r$run(host = '0.0.0.0', port=8001)
#r <- plumb("/bindings/controllers/spacetime/figure4.R")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r$run(host = '0.0.0.0', port=8001)
#r <- plumb("/bindings/controllers/spacetime/figure4.R")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r$run(host = '0.0.0.0', port=8001)
print(typeof(1.0))
#r <- plumb("/bindings/controllers/spacetime/figure4.R")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r$run(host = '0.0.0.0', port=8001)
days=1.0
v = vgmST("separable", space = vgm(0.6, "Exp", 750000), time = vgm(1, "Exp", days * 3600 * 24), sill=0.6)
days=5.0
v = vgmST("separable", space = vgm(0.6, "Exp", 750000), time = vgm(1, "Exp", days * 3600 * 24), sill=0.6)
days=5.0
v = vgmST("separable", space = vgm(0.6, "Exp", 750000), time = vgm(1, "Exp", days * 3600 * 24), sill=0.6)
wind.ST = krigeST(values ~ 1, wind.data, pred.grd, v)
colnames(wind.ST@data) <- "sqrt_speed"
###################################################
layout = list(list("sp.lines", m, col='grey'),
list("sp.points", pts, first=F, cex=.5))
print(stplot(wind.ST, col.regions=brewer.pal(11, "RdBu")[-c(10,11)],
at=seq(-1.375,1,by=.25),
par.strip.text = list(cex=.7), sp.layout = layout))
function (newValue) {
library("xts")
library("RColorBrewer")
library("foreign")
library("plm")
library("sp")
library("spacetime")
library("gstat")
library("mapdata")
library("rgdal")
library("maps")
library("maptools")
if(exists(newValue)){
newValue = as.numeric(newValue)
}else{
newValue = 5.0
}
###################################################
options(prompt = "R> ", continue = "+  ", width = 70, useFancyQuotes = FALSE)
set.seed(1331)
data("wind", package = "gstat")
data("Produc", package = "plm")
###################################################
sp = cbind(x = c(0, 0, 1), y = c(0, 1, 1))
row.names(sp) = paste("point", 1:nrow(sp), sep="")
sp = SpatialPoints(sp)
###################################################
time = as.POSIXct("2010-08-05", tz = "GMT")+3600*(10:13)
###################################################
m = c(10, 20, 30) # means for each of the 3 point locations
values = rnorm(length(sp)*length(time), mean = rep(m, 4))
IDs = paste("ID", 1:length(values), sep = "_")
mydata = data.frame(values = signif(values, 3), ID = IDs)
###################################################
stfdf = STFDF(sp, time, time + 60, data = mydata)
xs1 = as(stfdf, "Spatial")
###################################################
x = as(stfdf, "STIDF")
xs2 = as(x, "Spatial")
###################################################
data("wind")
wind.loc$y = as.numeric(char2dms(as.character(wind.loc[["Latitude"]])))
wind.loc$x = as.numeric(char2dms(as.character(wind.loc[["Longitude"]])))
coordinates(wind.loc) = ~x+y
proj4string(wind.loc) = "+proj=longlat +datum=WGS84"
###################################################
wind$time = ISOdate(wind$year+1900, wind$month, wind$day)
wind$jday = as.numeric(format(wind$time, '%j'))
###################################################
stations = 4:15
windsqrt = sqrt(0.5148 * as.matrix(wind[stations])) # knots -> m/s
Jday = 1:366
windsqrt = windsqrt - mean(windsqrt)
daymeans = sapply(split(windsqrt, wind$jday), mean)
meanwind = lowess(daymeans ~ Jday, f = 0.1)$y[wind$jday]
velocities = apply(windsqrt, 2, function(x) { x - meanwind })
###################################################
wind.loc = wind.loc[match(names(wind[4:15]), wind.loc$Code),]
pts = coordinates(wind.loc[match(names(wind[4:15]), wind.loc$Code),])
rownames(pts) = wind.loc$Station
pts = SpatialPoints(pts, CRS("+proj=longlat +datum=WGS84"))
###################################################
utm29 = CRS("+proj=utm +zone=29 +datum=WGS84")
pts = spTransform(pts, utm29)
##################################################
wind.data = stConstruct(velocities, space = list(values = 1:ncol(velocities)),
time = wind$time, SpatialObj = pts, interval = TRUE)
###################################################
fname = system.file("shapes/sids.shp", package="maptools")[1]
nc = readShapePoly(fname, proj4string=CRS("+proj=longlat +datum=NAD27"))
###################################################
time = as.POSIXct(strptime(c("1974-07-01", "1979-07-01"), "%Y-%m-%d"),
tz = "GMT")
endTime = as.POSIXct(strptime(c("1978-06-30", "1984-06-30"), "%Y-%m-%d"),
tz = "GMT")
###################################################
data = data.frame(
BIR = c(nc$BIR74, nc$BIR79),
NWBIR = c(nc$NWBIR74, nc$NWBIR79),
SID = c(nc$SID74, nc$SID79))
###################################################
nct = STFDF(sp = as(nc, "SpatialPolygons"), time, data, endTime)
###################################################
states.m = map('state', plot=FALSE, fill=TRUE)
IDs <- sapply(strsplit(states.m$names, ":"), function(x) x[1])
states = map2SpatialPolygons(states.m, IDs=IDs)
###################################################
yrs = 1970:1986
time = as.POSIXct(paste(yrs, "-01-01", sep=""), tz = "GMT")
###################################################
data("Produc")
###################################################
# deselect District of Columbia, polygon 8, which is not present in Produc:
Produc.st = STFDF(states[-8], time, Produc[order(Produc[2], Produc[1]),])
###################################################
m = map2SpatialLines(
map("worldHires", xlim = c(-11,-5.4), ylim = c(51,55.5), plot=F))
proj4string(m) = "+proj=longlat +datum=WGS84"
m = spTransform(m, utm29)
###################################################
grd = SpatialPixels(SpatialPoints(makegrid(m, n = 300)),
proj4string = proj4string(m))
###################################################
wind.data = wind.data[, "1961-04"]
###################################################
n = 10
tgrd = xts(1:n, seq(min(index(wind.data)), max(index(wind.data)), length=n))
pred.grd = STF(grd, tgrd)
days = newValue
days=5.0
v = vgmST("separable", space = vgm(0.6, "Exp", 750000), time = vgm(1, "Exp", days * 3600 * 24), sill=0.6)
wind.ST = krigeST(values ~ 1, wind.data, pred.grd, v)
colnames(wind.ST@data) <- "sqrt_speed"
###################################################
layout = list(list("sp.lines", m, col='grey'),
list("sp.points", pts, first=F, cex=.5))
print(stplot(wind.ST, col.regions=brewer.pal(11, "RdBu")[-c(10,11)],
at=seq(-1.375,1,by=.25),
par.strip.text = list(cex=.7), sp.layout = layout))
}
tgrd = xts(1:n, seq(min(index(wind.data)), max(index(wind.data)), length=n))
pred.grd = STF(grd, tgrd)
days = newValue
days=5.0
v = vgmST("separable", space = vgm(0.6, "Exp", 750000), time = vgm(1, "Exp", days * 3600 * 24), sill=0.6)
wind.ST = krigeST(values ~ 1, wind.data, pred.grd, v)
colnames(wind.ST@data) <- "sqrt_speed"
###################################################
layout = list(list("sp.lines", m, col='grey'),
list("sp.points", pts, first=F, cex=.5))
print(stplot(wind.ST, col.regions=brewer.pal(11, "RdBu")[-c(10,11)],
at=seq(-1.375,1,by=.25),
par.strip.text = list(cex=.7), sp.layout = layout))
###################################################
n = 10
tgrd = xts(1:n, seq(min(index(wind.data)), max(index(wind.data)), length=n))
library("xts")
library("RColorBrewer")
library("foreign")
library("plm")
library("sp")
library("spacetime")
library("gstat")
library("mapdata")
library("rgdal")
library("maps")
library("maptools")
if(exists(newValue)){
newValue = as.numeric(newValue)
}else{
newValue = 5.0
}
###################################################
options(prompt = "R> ", continue = "+  ", width = 70, useFancyQuotes = FALSE)
set.seed(1331)
data("wind", package = "gstat")
data("Produc", package = "plm")
###################################################
sp = cbind(x = c(0, 0, 1), y = c(0, 1, 1))
row.names(sp) = paste("point", 1:nrow(sp), sep="")
sp = SpatialPoints(sp)
###################################################
time = as.POSIXct("2010-08-05", tz = "GMT")+3600*(10:13)
###################################################
m = c(10, 20, 30) # means for each of the 3 point locations
values = rnorm(length(sp)*length(time), mean = rep(m, 4))
IDs = paste("ID", 1:length(values), sep = "_")
mydata = data.frame(values = signif(values, 3), ID = IDs)
###################################################
stfdf = STFDF(sp, time, time + 60, data = mydata)
xs1 = as(stfdf, "Spatial")
###################################################
x = as(stfdf, "STIDF")
xs2 = as(x, "Spatial")
###################################################
data("wind")
wind.loc$y = as.numeric(char2dms(as.character(wind.loc[["Latitude"]])))
wind.loc$x = as.numeric(char2dms(as.character(wind.loc[["Longitude"]])))
coordinates(wind.loc) = ~x+y
proj4string(wind.loc) = "+proj=longlat +datum=WGS84"
###################################################
wind$time = ISOdate(wind$year+1900, wind$month, wind$day)
wind$jday = as.numeric(format(wind$time, '%j'))
###################################################
stations = 4:15
windsqrt = sqrt(0.5148 * as.matrix(wind[stations])) # knots -> m/s
Jday = 1:366
windsqrt = windsqrt - mean(windsqrt)
daymeans = sapply(split(windsqrt, wind$jday), mean)
meanwind = lowess(daymeans ~ Jday, f = 0.1)$y[wind$jday]
velocities = apply(windsqrt, 2, function(x) { x - meanwind })
###################################################
wind.loc = wind.loc[match(names(wind[4:15]), wind.loc$Code),]
pts = coordinates(wind.loc[match(names(wind[4:15]), wind.loc$Code),])
rownames(pts) = wind.loc$Station
pts = SpatialPoints(pts, CRS("+proj=longlat +datum=WGS84"))
###################################################
utm29 = CRS("+proj=utm +zone=29 +datum=WGS84")
pts = spTransform(pts, utm29)
##################################################
wind.data = stConstruct(velocities, space = list(values = 1:ncol(velocities)),
time = wind$time, SpatialObj = pts, interval = TRUE)
###################################################
fname = system.file("shapes/sids.shp", package="maptools")[1]
nc = readShapePoly(fname, proj4string=CRS("+proj=longlat +datum=NAD27"))
###################################################
time = as.POSIXct(strptime(c("1974-07-01", "1979-07-01"), "%Y-%m-%d"),
tz = "GMT")
endTime = as.POSIXct(strptime(c("1978-06-30", "1984-06-30"), "%Y-%m-%d"),
tz = "GMT")
###################################################
data = data.frame(
BIR = c(nc$BIR74, nc$BIR79),
NWBIR = c(nc$NWBIR74, nc$NWBIR79),
SID = c(nc$SID74, nc$SID79))
###################################################
nct = STFDF(sp = as(nc, "SpatialPolygons"), time, data, endTime)
###################################################
states.m = map('state', plot=FALSE, fill=TRUE)
IDs <- sapply(strsplit(states.m$names, ":"), function(x) x[1])
states = map2SpatialPolygons(states.m, IDs=IDs)
###################################################
yrs = 1970:1986
time = as.POSIXct(paste(yrs, "-01-01", sep=""), tz = "GMT")
###################################################
data("Produc")
###################################################
# deselect District of Columbia, polygon 8, which is not present in Produc:
Produc.st = STFDF(states[-8], time, Produc[order(Produc[2], Produc[1]),])
###################################################
m = map2SpatialLines(
map("worldHires", xlim = c(-11,-5.4), ylim = c(51,55.5), plot=F))
proj4string(m) = "+proj=longlat +datum=WGS84"
m = spTransform(m, utm29)
###################################################
grd = SpatialPixels(SpatialPoints(makegrid(m, n = 300)),
proj4string = proj4string(m))
###################################################
wind.data = wind.data[, "1961-04"]
###################################################
###################################################
n = 10
tgrd = xts(1:n, seq(min(index(wind.data)), max(index(wind.data)), length=n))
pred.grd = STF(grd, tgrd)
days = newValue
days=5.0
v = vgmST("separable", space = vgm(0.6, "Exp", 750000), time = vgm(1, "Exp", days * 3600 * 24), sill=0.6)
wind.ST = krigeST(values ~ 1, wind.data, pred.grd, v)
colnames(wind.ST@data) <- "sqrt_speed"
###################################################
layout = list(list("sp.lines", m, col='grey'),
list("sp.points", pts, first=F, cex=.5))
print(stplot(wind.ST, col.regions=brewer.pal(11, "RdBu")[-c(10,11)],
at=seq(-1.375,1,by=.25),
par.strip.text = list(cex=.7), sp.layout = layout))
days = 1.0
v = vgmST("separable", space = vgm(0.6, "Exp", 750000), time = vgm(1, "Exp", days * 3600 * 24), sill=0.6)
wind.ST = krigeST(values ~ 1, wind.data, pred.grd, v)
colnames(wind.ST@data) <- "sqrt_speed"
###################################################
layout = list(list("sp.lines", m, col='grey'),
list("sp.points", pts, first=F, cex=.5))
print(stplot(wind.ST, col.regions=brewer.pal(11, "RdBu")[-c(10,11)],
at=seq(-1.375,1,by=.25),
par.strip.text = list(cex=.7), sp.layout = layout))
#r <- plumb("/bindings/controllers/spacetime/figure4.R")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r$run(host = '0.0.0.0', port=8001)
#r <- plumb("/bindings/controllers/spacetime/figure4.R")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r$run(host = '0.0.0.0', port=8001)
print(newValue)
#r <- plumb("/bindings/controllers/spacetime/figure4.R")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r$run(host = '0.0.0.0', port=8001)
library("plumber")
#r <- plumb("/bindings/controllers/spacetime/figure4.R")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r$run(host = '0.0.0.0', port=8001)
#r <- plumb("/bindings/controllers/spacetime/figure4.R")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r$run(host = '0.0.0.0', port=8001)
#r <- plumb("/bindings/controllers/spacetime/figure4.R")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r$run(host = '0.0.0.0', port=8001)
library("plumber")
#r <- plumb("/tmp/o2r/compendium/L7fDT/figure4.R")
#r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
r <- plumb("figure4.R")
r$run(host = '0.0.0.0', port=8000)
# ex-sync.R
#library(magrittr)
#set.seed(512)
remove.packages(magrittr)
# ex-sync.R
#library(magrittr)
#set.seed(512)
remove.packages("magrittr")
library("plumber")
#r <- plumb("/tmp/o2r/compendium/L7fDT/figure4.R")
path = paste("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/", input[[1]], "/figure4.R", sep="")
r <- plumb(path)
r$run(host = '0.0.0.0', port=8000)
###################################################
options(prompt = "R> ", continue = "+  ", width = 70, useFancyQuotes = FALSE)
read.dbf(system.file("shapes/sids.dbf", package="maptools"))[1:5,c(5,9:14)]
###################################################
data("wind", package = "gstat")
read.dbf(system.file("shapes/sids.dbf", package="maptools"))[1:5,c(5,9:14)]
install.packages("maptools")
read.dbf(system.file("shapes/sids.dbf", package="maptools"))[1:5,c(5,9:14)]
###################################################
library("foreign")
read.dbf(system.file("shapes/sids.dbf", package="maptools"))[1:5,c(5,9:14)]
###################################################
data("wind", package = "gstat")
wind[1:6,1:12]
write.csv(wind[1:6,1:12], "windSubset.csv")
###################################################
library("plm")
data("Produc", package = "plm")
write.csv(Produc[1:5,1:9], "producSubset.csv")
read.csv("producSubset.csv")
read.csv("windSubset.csv")
###################################################
opar = par()
par(mfrow=c(2,2))
# 1:
s = 1:3
t = c(1, 1.75, 3, 4.5)
g = data.frame(rep(t, each=3), rep(s,4))
col = 'blue'
pch = 16
plot(g, xaxt = 'n', yaxt = 'n', xlab = "Time points",
ylab = "Spatial features", xlim = c(.5,5.5), ylim = c(.5,3.5),
pch = pch, col = col)
abline(h=s, col = grey(.8))
###################################################
options(prompt = "R> ", continue = "+  ", width = 70, useFancyQuotes = FALSE)
set.seed(1331)
###################################################
library("foreign")
read.dbf(system.file("shapes/sids.dbf", package="maptools"))[1:5,c(5,9:14)]
###################################################
data("wind", package = "gstat")
wind[1:6,1:12]
###################################################
data("Produc", package = "plm")
Produc[1:5,1:9]
###################################################
opar = par()
par(mfrow=c(2,2))
# 1:
s = 1:3
t = c(1, 1.75, 3, 4.5)
g = data.frame(rep(t, each=3), rep(s,4))
col = 'blue'
pch = 16
plot(g, xaxt = 'n', yaxt = 'n', xlab = "Time points",
ylab = "Spatial features", xlim = c(.5,5.5), ylim = c(.5,3.5),
pch = pch, col = col)
library(plumber)
r <- plumb("plumbr.R")  # Where 'myfile.R' is the location of the file shown above
r$run(port=8000)
library("plumber")
#r <- plumb("/tmp/o2r/compendium/L7fDT/figure4.R")
path = paste("/tmp/o2r/compendium/", input[[1]], "/figure4.R", sep="")
#r <- plumb("/tmp/o2r/compendium/L7fDT/figure4.R")
#path = paste("/tmp/o2r/compendium/", input[[1]], "/figure4.R", sep="")
path = paste("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/", input[[1]], "/figure4.R", sep="")
#r <- plumb("/tmp/o2r/compendium/L7fDT/figure4.R")
#path = paste("/tmp/o2r/compendium/", input[[1]], "/figure4.R", sep="")
#path = ("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/", input[[1]], "/figure4.R", sep="")
r <- plumb("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/spacetime/figure4.R")
#r <- plumb("/tmp/o2r/compendium/L7fDT/figure4.R")
#path = paste("/tmp/o2r/compendium/", input[[1]], "/figure4.R", sep="")
#path = ("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/", input[[1]], "/figure4.R", sep="")
r <- plumb("/figure4.R")
#r <- plumb("/tmp/o2r/compendium/L7fDT/figure4.R")
#path = paste("/tmp/o2r/compendium/", input[[1]], "/figure4.R", sep="")
#path = ("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/", input[[1]], "/figure4.R", sep="")
r <- plumb("figure4.R")
setwd("~/o2r-platform/bindings/o2r-bindings/controllers/spacetime")
#r <- plumb("/tmp/o2r/compendium/L7fDT/figure4.R")
#path = paste("/tmp/o2r/compendium/", input[[1]], "/figure4.R", sep="")
#path = ("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/", input[[1]], "/figure4.R", sep="")
r <- plumb("figure4.R")
#r <- plumb("/tmp/o2r/compendium/L7fDT/figure4.R")
#path = paste("/tmp/o2r/compendium/", input[[1]], "/figure4.R", sep="")
#path = ("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/", input[[1]], "/figure4.R", sep="")
r <- plumb("figure4old.R")
r$run(host = '0.0.0.0', port=8000)
r$run(host = '0.0.0.0', port=8000)
#r <- plumb("/tmp/o2r/compendium/L7fDT/figure4.R")
#path = paste("/tmp/o2r/compendium/", input[[1]], "/figure4.R", sep="")
#path = ("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/", input[[1]], "/figure4.R", sep="")
r <- plumb("figure4old.R")
r$run(host = '0.0.0.0', port=8000)
#r <- plumb("/tmp/o2r/compendium/L7fDT/figure4.R")
#path = paste("/tmp/o2r/compendium/", input[[1]], "/figure4.R", sep="")
#path = ("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/", input[[1]], "/figure4.R", sep="")
r <- plumb("figure4old.R")
r$run(host = '0.0.0.0', port=8000)
#r <- plumb("/tmp/o2r/compendium/L7fDT/figure4.R")
#path = paste("/tmp/o2r/compendium/", input[[1]], "/figure4.R", sep="")
#path = ("/home/markus/o2r-platform/bindings/o2r-bindings/controllers/", input[[1]], "/figure4.R", sep="")
r <- plumb("figure4old.R")
r$run(host = '0.0.0.0', port=8000)
